{% extends "base_layout" %}

{% block content %}
<div class="columns">
  {% include "partials/side_menu" %}
  <div class="column is-10">
    <div class="content">
      <h1>Sanitizer</h1>
      <p>
        Hangar has it's own HTML sanitizer. It uses <a href="https://crates.io/crates/ammonia" target="_blank">ammonia</a> crate, so the sanitization of HTML is very fast. You can use <code>guards::sanitized_str::SanitizedStr</code> as part of a <code>struct</code> which can be serialized and deserialized and can be inserted into database as "cleaned" string.
      </p>
      <p>
        Usage example:
        <pre>
#[derive(Debug, Serialize)]
struct TestView<&zwj;'a> {
    content: &'a SanitizedStr,
}

#[get("/sanitized")]
pub fn sanitized() -> Template {
    let header = DefaultHeader {
        title: String::from("Sanitized"),
    };
    let test_str =
        SanitizedStr::new("<&zwj;b><&zwj;img src='' onerror='alert(\\'hax\\')'>I cannot hack you<&zwj;/b>");
    let body = TestView { content: &test_str };
    let context = ViewModel::new(&header, &body);
    Template::render("pages/sanitize", &context)
}
        </pre>
      </p>
    </div>
  </div>
</div>
{% endblock content %}
